# Пользуясь вложенными функциями, реализуйте простой калькулятор.
# Необходимо реализовать функцию calculate , которая принимает три
# параметра:
#  обязательный числовой параметр x
#  обязательный числовой параметр y
#  необязательный строковый параметр operation,  по умолчанию принимает
# значение английской буквы a
# В данной функции должны быть реализованы следующие функции:
#  addition - печатаем сложение двух чисел,
#  subtraction - печатаем вычитание из первого переданного параметра
# второго;
#  division - печатаем деление первого на второго,
#  multiplication - печатаем умножение двух чисел.
# А при помощи параметра operation и условного оператора нужно выбрать
# какая из функций должна быть вызвана:
#  если operation = a, вызываем функцию addition;
#  если operation = s, вызываем функции subtraction;
#  если operation = d, вызываем функции division;
#  если operation = m, вызываем функции multiplication;
# Если operation принимает значение, отличное от перечисленных выше букв,
# то необходимо вывести на экран  сообщение Ошибка. Данной операции не
#  существует.
# Также если мы выполняем деление, то второе число (y) не должен равняться
# нулю, в противном случае необходимо вывести на экран: На ноль делить нельзя!

from typing import Callable


def calculate(operation: str = "a") -> Callable[[float, float], float | str]:
    def addition(x: float, y: float) -> float:
        return x + y

    def subtraction(x: float, y: float) -> float:
        return x - y

    def division(x: float, y: float) -> float:
        if int(y) == 0:
            return "На ноль делить нельзя!"
        else:
            return x / y

    def multiplication(x: float, y: float) -> float:
        return x * y
    
    def err(x: float, y: float) -> str:
        return "Ошибка. Данной операции не существует" 

    match operation:
        case "a":
            return addition
        case "s":
            return subtraction
        case "d":
            return division
        case "m":
            return multiplication
        case _:
            return err
            


assert calculate("s")(10, 4) == 6.0

assert calculate("d")(10, 0) == "На ноль делить нельзя!"

assert calculate("w")(10, 4) == "Ошибка. Данной операции не существует"

print("Успех")
