# Ваша задача создать функцию-генератор my_range_gen, которая копирует работу range.
#  my_range_gen можно запускать, передав ей один параметр stop
#  my_range_gen можно запускать, передав ей два параметра start и stop
#  my_range_gen можно запускать, передав ей три параметра start, stop и step
#  предусмотрите вариант запуска my_range_gen со значением step=0. При таком варианте
# вызова, функция не должна генерировать ни одной последовательности и закончить свою 
# работу. Такое же поведение должно быть если переданы нелогичные значения start,
# stop и step


def my_range_gen(*args):
    start = int(len(args) > 1) and args[0] or 0
    stop = len(args) == 1 and args[0] or len(args) > 1 and args[1]
    if len(args) == 3:
        step = args[2]
    else:
        step = 1
    while (step > 0 and start < stop) or (step < 0 and start > stop):
        yield start
        start += step

for i in my_range_gen(4, 8, 0):
    print(i)

tests = [(5,), (10,), (-5, 10), (30, 300, 1), (0, -10, -2), (0, -10, 5), 
(20, 10, 3), (1, 10, -2), (4, 8, 2), (8, 5, -1), (100, 300, 13), (10, 30, 3)]
for i in tests:
    try:
        assert [j for j in range(*i)] == [t for t in my_range_gen(*i)]
    except AssertionError:
        print(i)
